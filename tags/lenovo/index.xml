<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lenovo on STEEVdotnet</title>
    <link>https://steev.net/tags/lenovo/</link>
    <description>Recent content in lenovo on STEEVdotnet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 04 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://steev.net/tags/lenovo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Misc bits</title>
      <link>https://steev.net/posts/2021/09/misc-bits/</link>
      <pubDate>Sat, 04 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://steev.net/posts/2021/09/misc-bits/</guid>
      <description>Attempting to patch the debian 5.14 experimental kernel with the c630 bits. There seems to be some issue with the battery driver as it keeps claiming that i2c_transfer is an implicit declaration. Need to look into that.
In order to actually build the package itself though, I had to run the following commands that diederik gave me on #debian-kernel on oftc:
export ARCH=arm64 export CC=aarch64-linux-gnu-gcc-10 dpkg-architecture --host-arch arm64 dpkg-architecture -c fakeroot debian/rules maintainerclean dpkg-architecture -c debian/rules orig dpkg-architecture -c debian/rules debian/control dpkg-architecture -c fakeroot debian/rules binary-indep -j$(nproc) dpkg-architecture -c fakeroot debian/rules binary-arch -j$(nproc) This will tell debian to build the package using the dpkg-architecture of arm64, on amd64.</description>
    </item>
    
    <item>
      <title>Lenovo Yoga C630 Progress - 2021 Edition</title>
      <link>https://steev.net/posts/2021/09/lenovo-yoga-c630-progress-2021-edition/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://steev.net/posts/2021/09/lenovo-yoga-c630-progress-2021-edition/</guid>
      <description>So the 5.14 kernel is out, There are still 9(?) patches that are external to the kernel for C630 support, 3 related to the battery that need to be reworked, 5 related to the panel/bridge/backlight controls, and one to enable the IPA driver (LTE modem) in the dts file.
There are a few minor issues still, audio occasionally requires a few (up to 3) reboots, but it works, if you have the alsa-ucm-conf package installed from the linaro repository.</description>
    </item>
    
    <item>
      <title>Converting a Bionic install to Kali on the Lenovo C630</title>
      <link>https://steev.net/posts/2020/05/converting-a-bionic-install-to-kali-on-the-lenovo-c630/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://steev.net/posts/2020/05/converting-a-bionic-install-to-kali-on-the-lenovo-c630/</guid>
      <description>Since I&amp;rsquo;m a Kali developer for my day job, I like to &amp;ldquo;dogfood&amp;rdquo; and run Kali on most of my machines. Recently, since the majority of the support is in a 5.7-ish kernel, I went ahead and installed Bionic to a partition on the internal storage, and then went about &amp;ldquo;upgrading&amp;rdquo; it to run Kali instead of the Bionic install. This will be a bit of a walkthrough to show how I did it, and can be used as a general guide for converting an Ubuntu install to Kali, without reinstalling.</description>
    </item>
    
    <item>
      <title>Lenovo Yoga C630 Progress</title>
      <link>https://steev.net/posts/2020/05/lenovo-yoga-c630-progress/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://steev.net/posts/2020/05/lenovo-yoga-c630-progress/</guid>
      <description>DO NOT WIPE THE WINDOWS PARTITION UNTIL YOU&amp;rsquo;VE PULLED THE FIRMWARE FROM IT. Progress so far with the Lenovo Yoga C630 Thanks to Bamse we now have both USB-C ports working on the c630.
His branch is https://github.com/andersson/kernel/commits/wip/c630-5.7
What I&amp;rsquo;ve done so far to get it working:
This version of steps is what I use, you will likely want to skip Linus&#39; tree, and just use bamse as the base, unless you want to deal with merge conflicts.</description>
    </item>
    
  </channel>
</rss>
